2023-05-28 14:27:24.112534: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:24.120764: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:24.125227: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:25.464482: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-05-28 14:27:25.469313: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:25.504745: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:25.550829: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:26.793685: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:26.796651: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:26.799772: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-05-28 14:27:26.802598: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 21289 MB memory:  -> device: 0, name: NVIDIA RTX A5000, pci bus id: 0000:2e:00.0, compute capability: 8.6
all_x.shape:  (4831, 32, 7)
all_t.shape:  (4831, 32, 1)
all_y.shape:  (4831, 32)
Total number of sequences: 4831
train_x.shape:  (3865, 32, 7)
train_t.shape:  (3865, 32, 1)
train_y.shape:  (3865, 32)
Total number of train sequences: 3865
Total number of test  sequences: 966
  0%|          | 0/31 [00:00<?, ?it/s]2023-05-28 14:27:28.115753: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
2023-05-28 14:27:29.160277: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
  3%|▎         | 1/31 [00:02<01:00,  2.03s/it]  6%|▋         | 2/31 [00:03<00:45,  1.56s/it] 10%|▉         | 3/31 [00:04<00:40,  1.45s/it] 13%|█▎        | 4/31 [00:05<00:37,  1.37s/it]WARNING:tensorflow:5 out of the last 5 calls to <function IFGSM.__call__ at 0x7fb9304c4e50> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
 16%|█▌        | 5/31 [00:07<00:34,  1.32s/it]WARNING:tensorflow:6 out of the last 6 calls to <function IFGSM.__call__ at 0x7fb930427dc0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
 19%|█▉        | 6/31 [00:08<00:33,  1.32s/it] 23%|██▎       | 7/31 [00:09<00:30,  1.29s/it] 26%|██▌       | 8/31 [00:10<00:29,  1.27s/it] 29%|██▉       | 9/31 [00:12<00:27,  1.25s/it] 32%|███▏      | 10/31 [00:13<00:26,  1.28s/it] 35%|███▌      | 11/31 [00:14<00:25,  1.25s/it] 39%|███▊      | 12/31 [00:15<00:23,  1.23s/it] 42%|████▏     | 13/31 [00:17<00:22,  1.25s/it] 45%|████▌     | 14/31 [00:18<00:20,  1.23s/it] 48%|████▊     | 15/31 [00:19<00:19,  1.22s/it] 52%|█████▏    | 16/31 [00:20<00:18,  1.25s/it] 55%|█████▍    | 17/31 [00:21<00:17,  1.24s/it] 58%|█████▊    | 18/31 [00:23<00:15,  1.22s/it] 61%|██████▏   | 19/31 [00:24<00:15,  1.25s/it] 65%|██████▍   | 20/31 [00:25<00:13,  1.24s/it] 68%|██████▊   | 21/31 [00:26<00:12,  1.22s/it] 71%|███████   | 22/31 [00:28<00:10,  1.21s/it] 74%|███████▍  | 23/31 [00:29<00:10,  1.25s/it] 77%|███████▋  | 24/31 [00:30<00:08,  1.23s/it] 81%|████████  | 25/31 [00:31<00:07,  1.22s/it] 84%|████████▍ | 26/31 [00:33<00:06,  1.25s/it] 87%|████████▋ | 27/31 [00:34<00:04,  1.23s/it] 90%|█████████ | 28/31 [00:35<00:03,  1.22s/it] 94%|█████████▎| 29/31 [00:36<00:02,  1.26s/it] 97%|█████████▋| 30/31 [00:38<00:01,  1.24s/it]100%|██████████| 31/31 [00:39<00:00,  1.23s/it]100%|██████████| 31/31 [00:39<00:00,  1.27s/it]
total_loss: 1.6608809232711792 	 total_accuracy: 0.6091485507246377
